// <auto-generated />
using System;
using ContactTracing15.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactTracing15.Services.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210409182045_FakeDataPopulation")]
    partial class FakeDataPopulation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactTracing15.Models.Case", b =>
                {
                    b.Property<int>("CaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SymptomDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TesterID")
                        .HasColumnType("int");

                    b.Property<bool>("Traced")
                        .HasColumnType("bit");

                    b.Property<int?>("TracerID")
                        .HasColumnType("int");

                    b.HasKey("CaseID");

                    b.HasIndex("TesterID");

                    b.HasIndex("TracerID");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("ContactTracing15.Models.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TracedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ContactID");

                    b.HasIndex("CaseID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ContactTracing15.Models.Tester", b =>
                {
                    b.Property<int>("TesterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TestingCentreID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TesterID");

                    b.HasIndex("TestingCentreID");

                    b.ToTable("Testers");
                });

            modelBuilder.Entity("ContactTracing15.Models.TestingCentre", b =>
                {
                    b.Property<int>("TestingCentreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TestingCentreID");

                    b.ToTable("TestingCentres");
                });

            modelBuilder.Entity("ContactTracing15.Models.Tracer", b =>
                {
                    b.Property<int>("TracerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TracingCentreID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TracerID");

                    b.HasIndex("TracingCentreID");

                    b.ToTable("Tracers");
                });

            modelBuilder.Entity("ContactTracing15.Models.TracingCentre", b =>
                {
                    b.Property<int>("TracingCentreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TracingCentreID");

                    b.ToTable("TracingCentres");
                });

            modelBuilder.Entity("ContactTracing15.Models.Case", b =>
                {
                    b.HasOne("ContactTracing15.Models.Tester", "Tester")
                        .WithMany("Cases")
                        .HasForeignKey("TesterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContactTracing15.Models.Tracer", "Tracer")
                        .WithMany("Cases")
                        .HasForeignKey("TracerID");

                    b.Navigation("Tester");

                    b.Navigation("Tracer");
                });

            modelBuilder.Entity("ContactTracing15.Models.Contact", b =>
                {
                    b.HasOne("ContactTracing15.Models.Case", "Case")
                        .WithMany("Contacts")
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");
                });

            modelBuilder.Entity("ContactTracing15.Models.Tester", b =>
                {
                    b.HasOne("ContactTracing15.Models.TestingCentre", "TestingCentre")
                        .WithMany("Testers")
                        .HasForeignKey("TestingCentreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestingCentre");
                });

            modelBuilder.Entity("ContactTracing15.Models.Tracer", b =>
                {
                    b.HasOne("ContactTracing15.Models.TracingCentre", "TracingCentre")
                        .WithMany("Tracers")
                        .HasForeignKey("TracingCentreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TracingCentre");
                });

            modelBuilder.Entity("ContactTracing15.Models.Case", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("ContactTracing15.Models.Tester", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("ContactTracing15.Models.TestingCentre", b =>
                {
                    b.Navigation("Testers");
                });

            modelBuilder.Entity("ContactTracing15.Models.Tracer", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("ContactTracing15.Models.TracingCentre", b =>
                {
                    b.Navigation("Tracers");
                });
#pragma warning restore 612, 618
        }
    }
}
